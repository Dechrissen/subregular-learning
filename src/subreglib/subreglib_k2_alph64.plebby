# https://github.com/vvulpes0/Language-Toolkit-2 (use DEVELOPMENT branch)

#################################################
#   CLS.a(.t).k.i
#
#   CLS: class
#   a: alphabet size
#   (.t): the threshold for LTT
#   k : the k-value
#   i : enumerator of lgs (should be unique)
##################################################

=universe {/a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u /v /w
/x /y /z /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /0 /1 /2 /3 /4 /5 /6 /7 /8 /9 /# /$}


=aa  </a /a>
=ab  </a /b>
=ac  </a /c>
=ad  </a /d>
=ba  </b /a>
=bb  </b /b>
=bc  </b /c>
=bd  </b /d>
=cd  </c /d>

=aa' </a,/a>
=ab' </a,/b>
=ac' </a,/c>
=ad' </a,/d>
=ba' </b,/a>
=bb' </b,/b>
=bc' </b,/c>
=bd' </b,/d>
=cd' </c,/d>

=least2aa </a /a,/a /a>
=least3aa @@{least2aa,aa}
=least5aa @@{least2aa,least3aa}
=least6aa @@{least3aa,least3aa}

=least2ab </a /b,/a /b>
=least3ab @@{least2ab,ab}
=least5ab @@{least2ab,least3ab}
=least6ab @@{least3ab,least3ab}



=SL.64.2.0    ¬aa
=SL.64.2.1    ¬ab
=SL.64.2.2    ¬∨{aa,ab,ac}
=SL.64.2.3    ¬∨{aa,ab,ac,ba,bb,bd}

=cSL.64.2.0   aa
=cSL.64.2.1   ab
=cSL.64.2.2   ∨{aa,ab,ac}
=cSL.64.2.3   ∨{aa,ab,ac,ba,bb,bd}

=SP.64.2.0    ¬aa'
=SP.64.2.1    ¬ab'
=SP.64.2.2    ¬∨{aa',ab',ac'}
=SP.64.2.3    ¬∨{aa',ab',ac',ba',bb',bd'}

=cSP.64.2.0   aa'
=cSP.64.2.1   ab'
=cSP.64.2.2   ∨{aa',ab',ac'}
=cSP.64.2.3   ∨{aa',ab',ac',ba',bb',bd'}

=LT.64.2.0    ∨{¬aa,ab}
=LT.64.2.1    ∨{¬aa,bb}
=LT.64.2.2    ∨{¬ab,cd}
=LT.64.2.3    ∧{∨{¬aa,ab},∨{¬ab,aa}}
=LT.64.2.4    ∧{∨{¬aa,bb},∨{¬bb,aa}}
=LT.64.2.5    ∧{∨{¬ab,cd},∨{¬cd,ab}}
=LT.64.2.6    ∧{LT.64.2.0,LT.64.2.1}
=LT.64.2.7    ∨{LT.64.2.0,LT.64.2.1}

=PT.64.2.0    ∨{¬aa',ab'}
=PT.64.2.1    ∨{¬aa',bb'}
=PT.64.2.2    ∨{¬ab',cd'}
=PT.64.2.3    ∧{∨{¬aa',ab'},∨{¬ab',aa'}}
=PT.64.2.4    ∧{∨{¬aa',bb'},∨{¬bb',aa'}}
=PT.64.2.5    ∧{∨{¬ab',cd'},∨{¬cd',ab'}}
=PT.64.2.6    ∧{PT.64.2.0,PT.64.2.1}
=PT.64.2.7    ∨{PT.64.2.0,PT.64.2.1}

=LTT.64.3.2.0 ∧{least2aa,¬least3aa}
=LTT.64.3.2.1 ∧{least2ab,¬least3ab}
=LTT.64.6.2.0 ∧{least5aa,¬least6aa}
=LTT.64.6.2.1 ∧{least5ab,¬least6ab}


# PROPERLY STAR FREE

# We want is languages that are SF but not LTT nor PT.

#    One we know is :  Latin liquid dissimilation .
#    If ll subsequence then r occurs between them and if rr subsequence then l occurs between them. So we can do some variations of these.

# Plebby for LLD:
# l is a
# r is b

=SF.64.2.0 ~@(|%</b>, ~</a>, %|</b>) # complement of strings with 2 bs without an a between them
=SF.64.2.1 ~@(|%</a>, ~</b>, %|</a>) # complement of strings with 2 as without an b between them
=SF.64.2.2 /\{SF.64.2.0,SF.64.2.1}
=SF.64.2.3 /\{SF.64.2.0,LTT.64.3.2.0}
=SF.64.2.4 /\{SF.64.2.0,PT.64.2.0}

#   SF = closure of LT under concatenation.
#   One strategy is to concatenate LT languages and check with plebby if they are SF but not LTT and not PT.


# PROPERLY REGULAR

=a          </a>
=HaH    %||%</a>
=HbH    %||%</b>
=HcH    %||%</c>
=HdH    %||%</d>
=HabH %||%</a /b>

# #a mod 2 = 0, (even-a)
=R.1.m2.0 @{~a,*@{HaH,~a,HaH,~a}}

# #a mod 3 = 0
=R.1.m3.0 @{~a,*@{HaH,~a,HaH,~a,HaH,~a}}

# #a mod 7 = 0
=R.1.m7.0 @{~a,*@{HaH,~a,HaH,~a,HaH,~a,HaH,~a,HaH,~a,HaH,~a,HaH,~a}}

# #ab mod 2 = 0, (even-ab)
=R.2.m2.0 @{~ab,*@{HabH,~ab,HabH,~ab}}

# #ab mod 3 = 0
=R.2.m3.0 @{~ab,*@{HabH,~ab,HabH,~ab,HabH,~ab}}

# #ab mod 7 = 0
=R.2.m7.0 @{~ab,*@{HabH,~ab,HabH,~ab,HabH,~ab,HabH,~ab,HabH,~ab,HabH,~ab,HabH,~ab}}


####################
# WRITING THE FSAs #
####################

:writeatt ../fstlib/att_format/SL.64.2.0.att ins.txt outs.txt SL.64.2.0
:writeatt ../fstlib/att_format/SL.64.2.1.att ins.txt outs.txt SL.64.2.1
:writeatt ../fstlib/att_format/SL.64.2.2.att ins.txt outs.txt SL.64.2.2
:writeatt ../fstlib/att_format/SL.64.2.3.att ins.txt outs.txt SL.64.2.3

:writeatt ../fstlib/att_format/cSL.64.2.0.att ins.txt outs.txt cSL.64.2.0
:writeatt ../fstlib/att_format/cSL.64.2.1.att ins.txt outs.txt cSL.64.2.1
:writeatt ../fstlib/att_format/cSL.64.2.2.att ins.txt outs.txt cSL.64.2.2
:writeatt ../fstlib/att_format/cSL.64.2.3.att ins.txt outs.txt cSL.64.2.3

:writeatt ../fstlib/att_format/SP.64.2.0.att ins.txt outs.txt SP.64.2.0
:writeatt ../fstlib/att_format/SP.64.2.1.att ins.txt outs.txt SP.64.2.1
:writeatt ../fstlib/att_format/SP.64.2.2.att ins.txt outs.txt SP.64.2.2
:writeatt ../fstlib/att_format/SP.64.2.3.att ins.txt outs.txt SP.64.2.3

:writeatt ../fstlib/att_format/cSP.64.2.0.att ins.txt outs.txt cSP.64.2.0
:writeatt ../fstlib/att_format/cSP.64.2.1.att ins.txt outs.txt cSP.64.2.1
:writeatt ../fstlib/att_format/cSP.64.2.2.att ins.txt outs.txt cSP.64.2.2
:writeatt ../fstlib/att_format/cSP.64.2.3.att ins.txt outs.txt cSP.64.2.3

:writeatt ../fstlib/att_format/LT.64.2.0.att ins.txt outs.txt LT.64.2.0
:writeatt ../fstlib/att_format/LT.64.2.1.att ins.txt outs.txt LT.64.2.1
:writeatt ../fstlib/att_format/LT.64.2.2.att ins.txt outs.txt LT.64.2.2
:writeatt ../fstlib/att_format/LT.64.2.3.att ins.txt outs.txt LT.64.2.3
:writeatt ../fstlib/att_format/LT.64.2.4.att ins.txt outs.txt LT.64.2.4
:writeatt ../fstlib/att_format/LT.64.2.5.att ins.txt outs.txt LT.64.2.5
:writeatt ../fstlib/att_format/LT.64.2.6.att ins.txt outs.txt LT.64.2.6
:writeatt ../fstlib/att_format/LT.64.2.7.att ins.txt outs.txt LT.64.2.7

:writeatt ../fstlib/att_format/PT.64.2.0.att ins.txt outs.txt PT.64.2.0
:writeatt ../fstlib/att_format/PT.64.2.1.att ins.txt outs.txt PT.64.2.1
:writeatt ../fstlib/att_format/PT.64.2.2.att ins.txt outs.txt PT.64.2.2
:writeatt ../fstlib/att_format/PT.64.2.3.att ins.txt outs.txt PT.64.2.3
:writeatt ../fstlib/att_format/PT.64.2.4.att ins.txt outs.txt PT.64.2.4
:writeatt ../fstlib/att_format/PT.64.2.5.att ins.txt outs.txt PT.64.2.5
:writeatt ../fstlib/att_format/PT.64.2.6.att ins.txt outs.txt PT.64.2.6
:writeatt ../fstlib/att_format/PT.64.2.7.att ins.txt outs.txt PT.64.2.7

:writeatt ../fstlib/att_format/LTT.64.3.2.0.att ins.txt outs.txt LTT.64.3.2.0
:writeatt ../fstlib/att_format/LTT.64.3.2.1.att ins.txt outs.txt LTT.64.3.2.1
:writeatt ../fstlib/att_format/LTT.64.3.2.2.att ins.txt outs.txt LTT.64.3.2.2
:writeatt ../fstlib/att_format/LTT.64.3.2.3.att ins.txt outs.txt LTT.64.3.2.3

:writeatt ../fstlib/att_format/SF.64.2.0.att ins.txt outs.txt SF.64.2.0
:writeatt ../fstlib/att_format/SF.64.2.1.att ins.txt outs.txt SF.64.2.1
:writeatt ../fstlib/att_format/SF.64.2.2.att ins.txt outs.txt SF.64.2.2
:writeatt ../fstlib/att_format/SF.64.2.3.att ins.txt outs.txt SF.64.2.3
:writeatt ../fstlib/att_format/SF.64.2.4.att ins.txt outs.txt SF.64.2.4

:writeatt ../fstlib/att_format/R.1.m2.0.att ins.txt outs.txt R.1.m2.0
:writeatt ../fstlib/att_format/R.1.m3.0.att ins.txt outs.txt R.1.m3.0
:writeatt ../fstlib/att_format/R.1.m7.0.att ins.txt outs.txt R.1.m7.0
:writeatt ../fstlib/att_format/R.2.m2.0.att ins.txt outs.txt R.2.m2.0
:writeatt ../fstlib/att_format/R.2.m3.0.att ins.txt outs.txt R.2.m3.0
:writeatt ../fstlib/att_format/R.2.m7.0.att ins.txt outs.txt R.2.m7.0
